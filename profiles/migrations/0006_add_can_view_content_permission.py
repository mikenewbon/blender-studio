# Generated by Django 3.0.9 on 2020-11-26 13:21

from django.db import migrations, models
import django.db.models.deletion
from django.core.management.sql import emit_post_migrate_signal


def add_can_view_content_permission_to_groups(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    Profile = apps.get_model('profiles', 'Profile')
    content_type = ContentType.objects.get_for_model(Profile)
    # permissions are created in a `post_migrate` signal and won't be available until the **next** ./manage.py migrate,
    # causing __fake__.DoesNotExist: Permission matching query does not exist
    permission, _ = Permission.objects.get_or_create(
        codename='can_view_content',
        content_type=content_type,
        name='Can view subscription-only content',
    )
    # Add this permission to the groups that are currently interpreted as having active subscription status
    for group_name in ('demo', 'subscriber'):
        # Create these groups, so that tests and newly setup dev environments worked as expected
        group, _ = Group.objects.get_or_create(name=group_name)
        group.permissions.add(permission)


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('actstream', '0003_add_follow_flag'),
        ('profiles', '0005_add_notifications'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='notification',
            options={'ordering': ['-date_created']},
        ),
        migrations.AlterModelOptions(
            name='profile',
            options={'permissions': [('can_view_content', 'Can view subscription-only content')]},
        ),
        migrations.AlterField(
            model_name='notification',
            name='action',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='actstream.Action'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='date_read',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.RunPython(add_can_view_content_permission_to_groups),
    ]
